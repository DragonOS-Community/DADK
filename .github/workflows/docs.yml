name: Documents
on:
  push:
    branches: [ "master"]
  pull_request:
    branches: [ "master" ]


jobs:

  ensure-toolchain:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        
      - name: Setup Node.js environment
        working-directory: ./docs
        uses: actions/setup-node@v3.7.0
        with:
          node-version: "20.11.0"
      
      - name: Cache dependencies
        working-directory: ./docs
        id: cache-node-modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package.json') }}
      
      - name: echo node version
        working-directory: ./docs
        run: node -v
      
      - if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        name: Install dependencies
        working-directory: ./docs
        continue-on-error: true
        run: | 
          sudo apt update && sudo apt install -y build-essential
          source ~/.bashrc
          npm install
  
  build-and-deploy:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [ensure-toolchain]
    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        working-directory: ./docs
        id: cache-node-modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package.json') }}
      
      - name: Setup Node.js environment
        working-directory: ./docs
        uses: actions/setup-node@v3.7.0
        with:
          node-version: "20.11.0"
      
      - name: Build
        working-directory: ./docs
        run: npm run docs:build
      
      
      - name: Deploy
        working-directory: ./docs
        env:
          AWS_ENDPOINT_URL: ${{ secrets.DOCS_DEPLOY_S3_ENDPOINT_URL }}
          AWS_ACCESS_KEY_ID: ${{ secrets.DOCS_DEPLOY_S3_API_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DOCS_DEPLOY_S3_SECRET_KEY }}
        if: github.ref == 'refs/heads/master' && github.repository  == 'DragonOS-Community/DADK'
        run: |
          aws s3 sync ./.vuepress/dist s3://dragonos-docs/p/dadk --delete
